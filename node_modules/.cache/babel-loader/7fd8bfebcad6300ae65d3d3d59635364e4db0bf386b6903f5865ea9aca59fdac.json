{"ast":null,"code":"import { reqGetEchartsList } from '@/api';\n\n//state对象，存储组件的状态\nconst state = {\n  echarts_list: [] // 用户列表\n  // user_count: 0, // 用户数量\n};\n//唯一可以修改组件状态state值的方法，同步阻塞\nconst mutations = {\n  // 获取用户列表 state为设置的state对象，result为传进来进行更新的数据\n  GETUSERLIST(state, result) {\n    state.echarts_list = result.data;\n    // state.user_count = result.user_count\n  }\n};\n\nconst actions = {\n  // 获取echarts列表\n  async getEchartsList({\n    commit\n  }, info) {\n    let result = await reqGetEchartsList(info);\n    result = result.data;\n    console.log('result');\n    if (result.status === 0) {\n      commit('GETUSERLIST', result);\n      return result.msg || 'ok';\n    } else {\n      return Promise.reject(new Error(result.msg || 'fail'));\n    }\n  }\n};\n//取值的方法 通过该方法获取组件的状态\nconst getters = {\n  echarts_list(state) {\n    return state.echarts_list || ['娃娃'];\n    // return ['hhhhhh']\n  }\n  // user_count(state) {\n  //     return state.user_count || 0\n  // },\n};\n\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["reqGetEchartsList","state","echarts_list","mutations","GETUSERLIST","result","data","actions","getEchartsList","commit","info","console","log","status","msg","Promise","reject","Error","getters"],"sources":["/Users/jiangke/PycharmProjects/RL-app/src/store/front/echarts.js"],"sourcesContent":["import { reqGetEchartsList } from '@/api'\r\n\r\n\r\n//state对象，存储组件的状态\r\nconst state = {\r\n    echarts_list: [], // 用户列表\r\n    // user_count: 0, // 用户数量\r\n}\r\n//唯一可以修改组件状态state值的方法，同步阻塞\r\nconst mutations = {\r\n    // 获取用户列表 state为设置的state对象，result为传进来进行更新的数据\r\n    GETUSERLIST(state, result) {\r\n        state.echarts_list = result.data\r\n        // state.user_count = result.user_count\r\n    },\r\n}\r\n\r\nconst actions = {\r\n   \r\n  \r\n    // 获取echarts列表\r\n    async getEchartsList({ commit }, info) {\r\n        let result = await reqGetEchartsList(info)\r\n        result = result.data\r\n        console.log('result')\r\n        if (result.status === 0) {\r\n            commit('GETUSERLIST', result)\r\n            return result.msg || 'ok'\r\n        } else {\r\n            return Promise.reject(new Error(result.msg || 'fail'))\r\n        }\r\n    },\r\n   \r\n}\r\n//取值的方法 通过该方法获取组件的状态\r\nconst getters = {\r\n    echarts_list(state) {\r\n        return state.echarts_list || ['娃娃']\r\n        // return ['hhhhhh']\r\n    },\r\n    // user_count(state) {\r\n    //     return state.user_count || 0\r\n    // },\r\n}\r\n\r\nexport default {\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n}"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,OAAO;;AAGzC;AACA,MAAMC,KAAK,GAAG;EACVC,YAAY,EAAE,EAAE,CAAE;EAClB;AACJ,CAAC;AACD;AACA,MAAMC,SAAS,GAAG;EACd;EACAC,WAAWA,CAACH,KAAK,EAAEI,MAAM,EAAE;IACvBJ,KAAK,CAACC,YAAY,GAAGG,MAAM,CAACC,IAAI;IAChC;EACJ;AACJ,CAAC;;AAED,MAAMC,OAAO,GAAG;EAGZ;EACA,MAAMC,cAAcA,CAAC;IAAEC;EAAO,CAAC,EAAEC,IAAI,EAAE;IACnC,IAAIL,MAAM,GAAG,MAAML,iBAAiB,CAACU,IAAI,CAAC;IAC1CL,MAAM,GAAGA,MAAM,CAACC,IAAI;IACpBK,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,IAAIP,MAAM,CAACQ,MAAM,KAAK,CAAC,EAAE;MACrBJ,MAAM,CAAC,aAAa,EAAEJ,MAAM,CAAC;MAC7B,OAAOA,MAAM,CAACS,GAAG,IAAI,IAAI;IAC7B,CAAC,MAAM;MACH,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAACZ,MAAM,CAACS,GAAG,IAAI,MAAM,CAAC,CAAC;IAC1D;EACJ;AAEJ,CAAC;AACD;AACA,MAAMI,OAAO,GAAG;EACZhB,YAAYA,CAACD,KAAK,EAAE;IAChB,OAAOA,KAAK,CAACC,YAAY,IAAI,CAAC,IAAI,CAAC;IACnC;EACJ;EACA;EACA;EACA;AACJ,CAAC;;AAED,eAAe;EACXD,KAAK;EACLE,SAAS;EACTI,OAAO;EACPW;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}