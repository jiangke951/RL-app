{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: 'LineChart',\n  props: ['echarts_info'],\n  mounted() {\n    // const { nine_time_count, ten_time_count, eleven_time_count, twelve_time_count, thirteen_time_count, fourteen_time_count, fifteen_time_count, sixteen_time_count, seventeen_time_count, eighteen_time_count, nineteen_time_count, twenty_time_count, twenty_one_time_count } = this.echarts_info\n    // 初始化echarts实例\n    let lineCharts = echarts.init(this.$refs.lineCharts);\n    if (!this.echarts_info || typeof this.echarts_info.learning_curve !== 'string') {\n      console.error(this.echarts_info);\n      console.error('echarts_info 或 learning_curve 未正确初始化');\n      return;\n    }\n\n    // 配置数据\n    lineCharts.setOption({\n      // 图表的标题\n      title: {\n        // 主标题\n        text: '学习曲线'\n      },\n      xAxis: {\n        type: 'category'\n        // data: ['Mon1111', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        // data: Array.from({length: 10}, (_, i) => '1')\n        // data: ['0', '1', '2', '3', '4', '5', '6','7', '8', '9', '10', '11', '12', '13','14', '15', '16', '17', '18', '19', '20']\n      },\n\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        data: [...this.echarts_info.learning_curve.split(\",\")],\n        type: 'line'\n      }]\n    });\n  }\n};","map":{"version":3,"names":["echarts","name","props","mounted","lineCharts","init","$refs","echarts_info","learning_curve","console","error","setOption","title","text","xAxis","type","yAxis","series","data","split"],"sources":["src/views/Index/Home/LineChart3/index.vue"],"sourcesContent":["<template>\r\n    <div class=\"LineChart maxWH\" ref=\"lineCharts\">\r\n    \r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\nexport default {\r\n    name: 'LineChart',\r\n    props: ['echarts_info'],\r\n    mounted() {\r\n        // const { nine_time_count, ten_time_count, eleven_time_count, twelve_time_count, thirteen_time_count, fourteen_time_count, fifteen_time_count, sixteen_time_count, seventeen_time_count, eighteen_time_count, nineteen_time_count, twenty_time_count, twenty_one_time_count } = this.echarts_info\r\n        // 初始化echarts实例\r\n        let lineCharts = echarts.init(this.$refs.lineCharts)\r\n        if (!this.echarts_info || typeof this.echarts_info.learning_curve !== 'string') {  \r\n        console.error(this.echarts_info);  \r\n        console.error('echarts_info 或 learning_curve 未正确初始化');  \r\n        return;  \r\n    }  \r\n\r\n        // 配置数据\r\n        lineCharts.setOption({\r\n             // 图表的标题\r\n             title: {\r\n                // 主标题\r\n                text: '学习曲线',\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                // data: ['Mon1111', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n                // data: Array.from({length: 10}, (_, i) => '1')\r\n                // data: ['0', '1', '2', '3', '4', '5', '6','7', '8', '9', '10', '11', '12', '13','14', '15', '16', '17', '18', '19', '20']\r\n\r\n        },\r\n        yAxis: {\r\n            type: 'value'\r\n        },\r\n        series: [\r\n            {\r\n            data: [...this.echarts_info.learning_curve.split(\",\")],\r\n            type: 'line'\r\n            }\r\n        ]\r\n                })\r\n\r\n    },\r\n}\r\n</script>"],"mappings":"AAOA,YAAAA,OAAA;AACA;EACAC,IAAA;EACAC,KAAA;EACAC,QAAA;IACA;IACA;IACA,IAAAC,UAAA,GAAAJ,OAAA,CAAAK,IAAA,MAAAC,KAAA,CAAAF,UAAA;IACA,UAAAG,YAAA,gBAAAA,YAAA,CAAAC,cAAA;MACAC,OAAA,CAAAC,KAAA,MAAAH,YAAA;MACAE,OAAA,CAAAC,KAAA;MACA;IACA;;IAEA;IACAN,UAAA,CAAAO,SAAA;MACA;MACAC,KAAA;QACA;QACAC,IAAA;MACA;MACAC,KAAA;QACAC,IAAA;QACA;QACA;QACA;MAEA;;MACAC,KAAA;QACAD,IAAA;MACA;MACAE,MAAA,GACA;QACAC,IAAA,WAAAX,YAAA,CAAAC,cAAA,CAAAW,KAAA;QACAJ,IAAA;MACA;IAEA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}