{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nVue.use(VueRouter);\n\n// 引入路由\nimport routes from './routes';\n// 引入store仓库\nimport store from '@/store';\n\n// 先把VueRouter原型对象的push|replace, 保存一份\nlet originPush = VueRouter.prototype.push;\nlet originReplace = VueRouter.prototype.replace;\n// 重写push | replace\nVueRouter.prototype.push = function (location, resolve, reject) {\n  if (resolve && reject) {\n    originPush.call(this, location, resolve, reject);\n  } else {\n    originPush.call(this, location, () => {}, () => {});\n  }\n};\nVueRouter.prototype.replace = function (location, resolve, reject) {\n  if (resolve && reject) {\n    originReplace.call(this, location, resolve, reject);\n  } else {\n    originReplace.call(this, location, () => {}, () => {});\n  }\n};\n\n// 创建路由实例并传递配置\nconst router = new VueRouter({\n  base: process.env.BASE_URL,\n  // 配置路由\n  routes,\n  // 滚动行为\n  scrollBehavior(to, from, savedPosition) {\n    //eslint-disable-line no-unused-vars\n    // 返回的这个y=0, 代表滚动条在最上方\n    return {\n      y: 0\n    };\n  }\n});\n\n// 路由守卫 全局前置守位\nrouter.beforeEach(async (to, from, next) => {\n  let user_id = store.state.login.user_id || null;\n  let username = store.state.login.userinfo.username || null;\n  let isLogin = user_id ? true : false;\n  let readlist = store.state.login.readlist || []; //eslint-disable-line no-unused-vars\n  let identity = store.state.login.identity || ''; //eslint-disable-line no-unused-vars\n  if (isLogin) {\n    if (username) {\n      if (to.path.includes('login')) next('/');else next();\n    } else {\n      // 没有用户信息\n      try {\n        // 获取用户信息页面展示\n        await store.dispatch('getUserInfo', {\n          user_id\n        }).then(res => {\n          //eslint-disable-line no-unused-vars\n          next();\n        }).catch(async err => {\n          //eslint-disable-line no-unused-vars\n          // 登录信息失效了,重新登录\n          await store.dispatch('userLogout');\n          next('/login');\n        });\n      } catch (e) {\n        // 登录信息失效了,重新登录\n        await store.dispatch('userLogout');\n        next('/login');\n      }\n    }\n  } else {\n    if (to.path === '/login') next();else next('/login');\n  }\n});\n\n// 对外暴露\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","use","routes","store","originPush","prototype","push","originReplace","replace","location","resolve","reject","call","router","base","process","env","BASE_URL","scrollBehavior","to","from","savedPosition","y","beforeEach","next","user_id","state","login","username","userinfo","isLogin","readlist","identity","path","includes","dispatch","then","res","catch","err","e"],"sources":["/Users/jiangke/PycharmProjects/RL-app/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nVue.use(VueRouter)\r\n\r\n// 引入路由\r\nimport routes from './routes'\r\n// 引入store仓库\r\nimport store from '@/store'\r\n\r\n\r\n\r\n// 先把VueRouter原型对象的push|replace, 保存一份\r\nlet originPush = VueRouter.prototype.push\r\nlet originReplace = VueRouter.prototype.replace\r\n// 重写push | replace\r\nVueRouter.prototype.push = function (location, resolve, reject) {\r\n    if (resolve && reject) {\r\n        originPush.call(this, location, resolve, reject)\r\n    } else {\r\n        originPush.call(this, location, () => { }, () => { })\r\n    }\r\n}\r\nVueRouter.prototype.replace = function (location, resolve, reject) {\r\n    if (resolve && reject) {\r\n        originReplace.call(this, location, resolve, reject)\r\n    } else {\r\n        originReplace.call(this, location, () => { }, () => { })\r\n    }\r\n}\r\n\r\n\r\n// 创建路由实例并传递配置\r\nconst router = new VueRouter({\r\n    base: process.env.BASE_URL,\r\n    // 配置路由\r\n    routes,\r\n    // 滚动行为\r\n    scrollBehavior(to, from, savedPosition) {//eslint-disable-line no-unused-vars\r\n        // 返回的这个y=0, 代表滚动条在最上方\r\n        return { y: 0 }\r\n    },\r\n})\r\n\r\n// 路由守卫 全局前置守位\r\nrouter.beforeEach(async (to, from, next) => {\r\n    let user_id = store.state.login.user_id || null\r\n    let username = store.state.login.userinfo.username || null\r\n    let isLogin = user_id ? true : false\r\n    let readlist = store.state.login.readlist || []//eslint-disable-line no-unused-vars\r\n    let identity = store.state.login.identity || ''//eslint-disable-line no-unused-vars\r\n    if (isLogin) {\r\n        if (username) {\r\n            if (to.path.includes('login')) next('/')\r\n            else next()\r\n        } else {\r\n            // 没有用户信息\r\n            try {\r\n                // 获取用户信息页面展示\r\n                await store.dispatch('getUserInfo', { user_id })\r\n                    .then(res => {//eslint-disable-line no-unused-vars\r\n                        next()\r\n                    })\r\n                    .catch(async err => {//eslint-disable-line no-unused-vars\r\n                        // 登录信息失效了,重新登录\r\n                        await store.dispatch('userLogout')\r\n                        next('/login')\r\n                    })\r\n            } catch (e) {\r\n                // 登录信息失效了,重新登录\r\n                await store.dispatch('userLogout')\r\n                next('/login')\r\n            }\r\n        }\r\n    } else {\r\n        if (to.path === '/login') next()\r\n        else next('/login')\r\n    }\r\n})\r\n\r\n\r\n// 对外暴露\r\nexport default router"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}