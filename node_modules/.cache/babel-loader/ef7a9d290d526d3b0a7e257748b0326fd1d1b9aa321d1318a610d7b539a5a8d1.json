{"ast":null,"code":"import { reqAddUser, reqGetUserList, reqBackUpdateUserInfo, reqDelUser } from '@/api';\n\n//state对象，存储组件的状态\nconst state = {\n  userlist: [],\n  // 用户列表\n  user_count: 0 // 用户数量\n};\n//唯一可以修改组件状态state值的方法，同步阻塞\nconst mutations = {\n  // 获取用户列表 state为设置的state对象，result为传进来进行更新的数据\n  GETUSERLIST(state, result) {\n    state.userlist = result.data;\n    state.user_count = result.user_count;\n  }\n};\nconst actions = {\n  // 添加用户\n  async addUser({\n    commit\n  }, user) {\n    //eslint-disable-line no-unused-vars\n\n    let result = await reqAddUser(user);\n    result = result.data;\n    // console.log(result)\n    if (result.status === 0) {\n      return result.msg || 'ok';\n    } else {\n      return Promise.reject(new Error(result.msg || 'fail'));\n    }\n  },\n  // 获取用户列表\n  async getUserList({\n    commit\n  }, info) {\n    let result = await reqGetUserList(info);\n    result = result.data;\n    // console.log(result)\n    if (result.status === 0) {\n      commit('GETUSERLIST', result);\n      return result.msg || 'ok';\n    } else {\n      return Promise.reject(new Error(result.msg || 'fail'));\n    }\n  },\n  // 修改用户信息\n  async backUpdateUserInfo({\n    commit\n  }, user) {\n    //eslint-disable-line no-unused-vars\n    let result = await reqBackUpdateUserInfo(user);\n    result = result.data;\n    // console.log(result)\n    if (result.status === 0) {\n      return result.msg || 'ok';\n    } else {\n      return Promise.reject(new Error(result.msg || 'fail'));\n    }\n  },\n  // 封禁用户\n  async delUser({\n    commit\n  }, user = {}) {\n    //eslint-disable-line no-unused-vars\n    let result = await reqDelUser(user);\n    result = result.data;\n    // console.log(result)\n    if (result.status === 0) {\n      return result.msg || 'ok';\n    } else {\n      return Promise.reject(new Error(result.msg || 'fail'));\n    }\n  }\n};\n//取值的方法 通过该方法获取组件的状态\nconst getters = {\n  userlist(state) {\n    return state.userlist || [];\n  },\n  user_count(state) {\n    return state.user_count || 0;\n  }\n};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["reqAddUser","reqGetUserList","reqBackUpdateUserInfo","reqDelUser","state","userlist","user_count","mutations","GETUSERLIST","result","data","actions","addUser","commit","user","status","msg","Promise","reject","Error","getUserList","info","backUpdateUserInfo","delUser","getters"],"sources":["/Users/jiangke/PycharmProjects/RL-app/src/store/back/user.js"],"sourcesContent":["import { reqAddUser, reqGetUserList, reqBackUpdateUserInfo, reqDelUser } from '@/api'\r\n\r\n\r\n//state对象，存储组件的状态\r\nconst state = {\r\n    userlist: [], // 用户列表\r\n    user_count: 0, // 用户数量\r\n}\r\n//唯一可以修改组件状态state值的方法，同步阻塞\r\nconst mutations = {\r\n    // 获取用户列表 state为设置的state对象，result为传进来进行更新的数据\r\n    GETUSERLIST(state, result) {\r\n        state.userlist = result.data\r\n        state.user_count = result.user_count\r\n    },\r\n}\r\n\r\nconst actions = {\r\n    // 添加用户\r\n    async addUser({ commit }, user) {//eslint-disable-line no-unused-vars\r\n    \r\n        let result = await reqAddUser(user)\r\n        result = result.data\r\n        // console.log(result)\r\n        if (result.status === 0) {\r\n            return result.msg || 'ok'\r\n        } else {\r\n            return Promise.reject(new Error(result.msg || 'fail'))\r\n        }\r\n    },\r\n    // 获取用户列表\r\n    async getUserList({ commit }, info) {\r\n        let result = await reqGetUserList(info)\r\n        result = result.data\r\n        // console.log(result)\r\n        if (result.status === 0) {\r\n            commit('GETUSERLIST', result)\r\n            return result.msg || 'ok'\r\n        } else {\r\n            return Promise.reject(new Error(result.msg || 'fail'))\r\n        }\r\n    },\r\n    // 修改用户信息\r\n    async backUpdateUserInfo({ commit }, user) {//eslint-disable-line no-unused-vars\r\n        let result = await reqBackUpdateUserInfo(user)\r\n        result = result.data\r\n        // console.log(result)\r\n        if (result.status === 0) {\r\n            return result.msg || 'ok'\r\n        } else {\r\n            return Promise.reject(new Error(result.msg || 'fail'))\r\n        }\r\n    },\r\n    // 封禁用户\r\n    async delUser({ commit }, user = {}) {//eslint-disable-line no-unused-vars\r\n        let result = await reqDelUser(user)\r\n        result = result.data\r\n        // console.log(result)\r\n        if (result.status === 0) {\r\n            return result.msg || 'ok'\r\n        } else {\r\n            return Promise.reject(new Error(result.msg || 'fail'))\r\n        }\r\n    },\r\n}\r\n//取值的方法 通过该方法获取组件的状态\r\nconst getters = {\r\n    userlist(state) {\r\n        return state.userlist || []\r\n    },\r\n    user_count(state) {\r\n        return state.user_count || 0\r\n    },\r\n}\r\n\r\nexport default {\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}