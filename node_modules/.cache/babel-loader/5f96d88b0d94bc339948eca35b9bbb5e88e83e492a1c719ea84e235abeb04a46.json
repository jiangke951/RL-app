{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'BMyInfo',\n  data() {\n    const validataOldpwd = (rule, value, callback) => {\n      const reg = /^[a-zA-Z0-9_]{8,12}$/;\n      if (value.trim().length <= 0) {\n        callback(new Error('请输入旧密码'));\n      } else if (!reg.test(value.trim())) {\n        callback(new Error('密码格式错误'));\n      } else {\n        callback();\n      }\n    };\n    const validataNewpwd = (rule, value, callback) => {\n      const reg = /^[a-zA-Z0-9_]{8,12}$/;\n      if (value.trim().length <= 0) {\n        callback(new Error('请输入新密码'));\n      } else if (!reg.test(value.trim())) {\n        callback(new Error('密码格式错误'));\n      } else if (value.trim() === this.pwdForm.oldpwd) {\n        callback(new Error('新密码不能与旧密码相同'));\n      } else {\n        callback();\n      }\n    };\n    const validataNewpwd1 = (rule, value, callback) => {\n      if (this.pwdForm.newpwd.trim() === '') {\n        callback(new Error('请先输入新密码'));\n      } else if (value.trim().length <= 0) {\n        callback(new Error('确认密码不得为空'));\n      } else if (value.trim() !== this.pwdForm.newpwd) {\n        callback(new Error('两次输入密码不一致'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      // 表单验证规则\n      rules: {\n        oldpwd: [{\n          required: true,\n          trigger: ['blur', 'change'],\n          validator: validataOldpwd\n        }],\n        newpwd: [{\n          required: true,\n          trigger: ['blur', 'change'],\n          validator: validataNewpwd\n        }],\n        newpwd1: [{\n          required: true,\n          trigger: ['blur', 'change'],\n          validator: validataNewpwd1\n        }]\n      },\n      // 修改密码\n      pwdForm: {\n        oldpwd: '',\n        newpwd: '',\n        newpwd1: ''\n      }\n    };\n  },\n  computed: {\n    ...mapGetters(['userinfo'])\n  },\n  methods: {\n    // 重置表单\n    resetForm(formname) {\n      this.$refs[formname].resetFields();\n    },\n    // 修改密码\n    async updatePwd(formname) {\n      await this.$refs[formname].validate(async vaild => {\n        if (vaild) {\n          await this.$confirm('确定修改?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(async () => {\n            try {\n              const pwdForm = {\n                user_id: this.userinfo.user_id,\n                oldpwd: this.pwdForm.oldpwd,\n                newpwd: this.pwdForm.newpwd\n              };\n              await this.$store.dispatch('updatePwd', JSON.stringify(pwdForm)).then(res => {\n                this.$message({\n                  type: 'success',\n                  message: res\n                });\n                this.resetForm(formname);\n                setTimeout(() => {\n                  // 退出登录\n                  this.$store.dispatch('userLogout').then(res => this.$router.push('/login')); //eslint-disable-line no-unused-vars\n                }, 1000);\n              }).catch(err => this.$message({\n                type: 'warning',\n                message: err.message\n              }));\n            } catch (e) {\n              this.$message({\n                type: 'warning',\n                message: e.message\n              });\n            }\n          }).catch(() => {\n            this.$message({\n              type: 'info',\n              message: '已取消'\n            });\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","name","data","validataOldpwd","rule","value","callback","reg","trim","length","Error","test","validataNewpwd","pwdForm","oldpwd","validataNewpwd1","newpwd","rules","required","trigger","validator","newpwd1","computed","methods","resetForm","formname","$refs","resetFields","updatePwd","validate","vaild","$confirm","confirmButtonText","cancelButtonText","type","then","user_id","userinfo","$store","dispatch","JSON","stringify","res","$message","message","setTimeout","$router","push","catch","err","e"],"sources":["src/views/Index/Back/BMyInfo/index.vue"],"sourcesContent":["<template>\r\n    <div class=\"myinfo maxWH flex\">\r\n        <!-- 个人信息 -->\r\n        <el-form inline label-width=\"80px\" label-position=\"right\" style=\"width: 100%;min-width: 1000px;text-align: center;\">\r\n            <el-form-item label=\"账号\">\r\n                <el-input v-model.trim=\"userinfo.account\" disabled></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"用户名\">\r\n                <el-input v-model.trim=\"userinfo.username\" disabled></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"身份\">\r\n                <el-input v-model.trim=\"userinfo.identity\" disabled></el-input>\r\n            </el-form-item>\r\n        </el-form>\r\n        <!-- 修改密码 -->\r\n        <el-form ref=\"backPwdForm\" :model=\"pwdForm\" :rules=\"rules\" align=\"center\" label-width=\"80px\"\r\n            label-position=\"right\" hide-required-asterisk style=\"width: 40%;min-width: 400px;margin-top: 100px;\">\r\n            <el-form-item label=\"旧密码\" prop=\"oldpwd\">\r\n                <el-input type=\"password\" v-model.trim=\"pwdForm.oldpwd\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"新密码\" prop=\"newpwd\">\r\n                <el-input type=\"password\" v-model.trim=\"pwdForm.newpwd\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"确认密码\" prop=\"newpwd1\">\r\n                <el-input type=\"password\" v-model.trim=\"pwdForm.newpwd1\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item align=\"center\">\r\n                <el-button type=\"primary\" @click.native.prevent.stop=\"updatePwd('backPwdForm')\"\r\n                    style=\"margin-left: -40px;\">修 改</el-button>\r\n                <el-button @click.native.prevent.stop=\"resetForm('backPwdForm')\">重 置</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nexport default {\r\n    name: 'BMyInfo',\r\n    data() {\r\n        const validataOldpwd = (rule, value, callback) => {\r\n            const reg = /^[a-zA-Z0-9_]{8,12}$/\r\n            if (value.trim().length <= 0) {\r\n                callback(new Error('请输入旧密码'))\r\n            } else if (!reg.test(value.trim())) {\r\n                callback(new Error('密码格式错误'))\r\n            } else {\r\n                callback()\r\n            }\r\n        }\r\n        const validataNewpwd = (rule, value, callback) => {\r\n            const reg = /^[a-zA-Z0-9_]{8,12}$/\r\n            if (value.trim().length <= 0) {\r\n                callback(new Error('请输入新密码'))\r\n            } else if (!reg.test(value.trim())) {\r\n                callback(new Error('密码格式错误'))\r\n            } else if (value.trim() === this.pwdForm.oldpwd) {\r\n                callback(new Error('新密码不能与旧密码相同'))\r\n            } else {\r\n                callback()\r\n            }\r\n        }\r\n        const validataNewpwd1 = (rule, value, callback) => {\r\n            if (this.pwdForm.newpwd.trim() === '') {\r\n                callback(new Error('请先输入新密码'))\r\n            } else if (value.trim().length <= 0) {\r\n                callback(new Error('确认密码不得为空'))\r\n            } else if (value.trim() !== this.pwdForm.newpwd) {\r\n                callback(new Error('两次输入密码不一致'))\r\n            } else {\r\n                callback()\r\n            }\r\n        }\r\n        return {\r\n            // 表单验证规则\r\n            rules: {\r\n                oldpwd: [{ required: true, trigger: ['blur', 'change'], validator: validataOldpwd }],\r\n                newpwd: [{ required: true, trigger: ['blur', 'change'], validator: validataNewpwd }],\r\n                newpwd1: [{ required: true, trigger: ['blur', 'change'], validator: validataNewpwd1 }],\r\n            },\r\n            // 修改密码\r\n            pwdForm: {\r\n                oldpwd: '',\r\n                newpwd: '',\r\n                newpwd1: '',\r\n            },\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapGetters(['userinfo'])\r\n    },\r\n    methods: {\r\n        // 重置表单\r\n        resetForm(formname) {\r\n            this.$refs[formname].resetFields()\r\n        },\r\n        // 修改密码\r\n        async updatePwd(formname) {\r\n            await this.$refs[formname].validate(async vaild => {\r\n                if (vaild) {\r\n                    await this.$confirm('确定修改?', '提示', {\r\n                        confirmButtonText: '确定',\r\n                        cancelButtonText: '取消',\r\n                        type: 'warning'\r\n                    }).then(async () => {\r\n                        try {\r\n                            const pwdForm = { user_id: this.userinfo.user_id, oldpwd: this.pwdForm.oldpwd, newpwd: this.pwdForm.newpwd }\r\n                            await this.$store.dispatch('updatePwd', JSON.stringify(pwdForm))\r\n                                .then(res => {\r\n                                    this.$message({ type: 'success', message: res })\r\n                                    this.resetForm(formname)\r\n                                    setTimeout(() => {\r\n                                        // 退出登录\r\n                                        this.$store.dispatch('userLogout')\r\n                                            .then(res => this.$router.push('/login'))//eslint-disable-line no-unused-vars\r\n                                    }, 1000)\r\n                                }).catch(err => this.$message({ type: 'warning', message: err.message }))\r\n                        } catch (e) {\r\n                            this.$message({ type: 'warning', message: e.message })\r\n                        }\r\n                    }).catch(() => { this.$message({ type: 'info', message: '已取消' }) })\r\n                }\r\n            })\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.myinfo {\r\n    flex-flow: column;\r\n    align-items: center;\r\n    overflow: hidden;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}