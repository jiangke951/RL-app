{"ast":null,"code":"function friendlyDate(timestamp) {\n  timestamp = new Date(timestamp);\n  let formats = {\n    'year': '%n% 年前',\n    'month': '%n% 月前',\n    'day': '%n% 天前',\n    'hour': '%n% 小时前',\n    'minute': '%n% 分钟前',\n    'second': '%n% 秒前'\n  };\n  let now = Date.now();\n  let seconds = Math.floor((now - timestamp) / 1000);\n  let minutes = Math.floor(seconds / 60);\n  let hours = Math.floor(minutes / 60);\n  let days = Math.floor(hours / 24);\n  let months = Math.floor(days / 30);\n  let years = Math.floor(months / 12);\n  let diffType = '';\n  let diffValue = 0;\n  if (years > 0) {\n    diffType = 'year';\n    diffValue = years;\n  } else {\n    if (months > 0) {\n      diffType = 'month';\n      diffValue = months;\n    } else {\n      if (days > 0) {\n        diffType = 'day';\n        diffValue = days;\n      } else {\n        if (hours > 0) {\n          diffType = 'hour';\n          diffValue = hours;\n        } else {\n          if (minutes > 0) {\n            diffType = 'minute';\n            diffValue = minutes;\n          } else {\n            diffType = 'second';\n            diffValue = seconds === 0 ? seconds = 1 : seconds;\n          }\n        }\n      }\n    }\n  }\n  return formats[diffType].replace('%n%', diffValue);\n}\nexport default friendlyDate;","map":{"version":3,"names":["friendlyDate","timestamp","Date","formats","now","seconds","Math","floor","minutes","hours","days","months","years","diffType","diffValue","replace"],"sources":["/Users/jiangke/PycharmProjects/RL-app/src/utils/friendlyDate.js"],"sourcesContent":["function friendlyDate(timestamp) {\r\n    timestamp = new Date(timestamp)\r\n\tlet formats = {\r\n\t\t'year': '%n% 年前',\r\n\t\t'month': '%n% 月前',\r\n\t\t'day': '%n% 天前',\r\n\t\t'hour': '%n% 小时前',\r\n\t\t'minute': '%n% 分钟前',\r\n\t\t'second': '%n% 秒前',\r\n\t}\r\n\r\n\tlet now = Date.now();\r\n\tlet seconds = Math.floor((now - timestamp) / 1000)\r\n\tlet minutes = Math.floor(seconds / 60)\r\n\tlet hours = Math.floor(minutes / 60)\r\n\tlet days = Math.floor(hours / 24)\r\n\tlet months = Math.floor(days / 30)\r\n\tlet years = Math.floor(months / 12)\r\n\r\n\tlet diffType = ''\r\n\tlet diffValue = 0;\r\n\tif (years > 0) {\r\n\t\tdiffType = 'year'\r\n\t\tdiffValue = years\r\n\t} else {\r\n\t\tif (months > 0) {\r\n\t\t\tdiffType = 'month'\r\n\t\t\tdiffValue = months\r\n\t\t} else {\r\n\t\t\tif (days > 0) {\r\n\t\t\t\tdiffType = 'day'\r\n\t\t\t\tdiffValue = days\r\n\t\t\t} else {\r\n\t\t\t\tif (hours > 0) {\r\n\t\t\t\t\tdiffType = 'hour'\r\n\t\t\t\t\tdiffValue = hours\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (minutes > 0) {\r\n\t\t\t\t\t\tdiffType = 'minute'\r\n\t\t\t\t\t\tdiffValue = minutes\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdiffType = 'second'\r\n\t\t\t\t\t\tdiffValue = seconds === 0 ? (seconds = 1) : seconds\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn formats[diffType].replace('%n%', diffValue)\r\n}\r\n\r\nexport default friendlyDate"],"mappings":"AAAA,SAASA,YAAYA,CAACC,SAAS,EAAE;EAC7BA,SAAS,GAAG,IAAIC,IAAI,CAACD,SAAS,CAAC;EAClC,IAAIE,OAAO,GAAG;IACb,MAAM,EAAE,QAAQ;IAChB,OAAO,EAAE,QAAQ;IACjB,KAAK,EAAE,QAAQ;IACf,MAAM,EAAE,SAAS;IACjB,QAAQ,EAAE,SAAS;IACnB,QAAQ,EAAE;EACX,CAAC;EAED,IAAIC,GAAG,GAAGF,IAAI,CAACE,GAAG,CAAC,CAAC;EACpB,IAAIC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACH,GAAG,GAAGH,SAAS,IAAI,IAAI,CAAC;EAClD,IAAIO,OAAO,GAAGF,IAAI,CAACC,KAAK,CAACF,OAAO,GAAG,EAAE,CAAC;EACtC,IAAII,KAAK,GAAGH,IAAI,CAACC,KAAK,CAACC,OAAO,GAAG,EAAE,CAAC;EACpC,IAAIE,IAAI,GAAGJ,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,EAAE,CAAC;EACjC,IAAIE,MAAM,GAAGL,IAAI,CAACC,KAAK,CAACG,IAAI,GAAG,EAAE,CAAC;EAClC,IAAIE,KAAK,GAAGN,IAAI,CAACC,KAAK,CAACI,MAAM,GAAG,EAAE,CAAC;EAEnC,IAAIE,QAAQ,GAAG,EAAE;EACjB,IAAIC,SAAS,GAAG,CAAC;EACjB,IAAIF,KAAK,GAAG,CAAC,EAAE;IACdC,QAAQ,GAAG,MAAM;IACjBC,SAAS,GAAGF,KAAK;EAClB,CAAC,MAAM;IACN,IAAID,MAAM,GAAG,CAAC,EAAE;MACfE,QAAQ,GAAG,OAAO;MAClBC,SAAS,GAAGH,MAAM;IACnB,CAAC,MAAM;MACN,IAAID,IAAI,GAAG,CAAC,EAAE;QACbG,QAAQ,GAAG,KAAK;QAChBC,SAAS,GAAGJ,IAAI;MACjB,CAAC,MAAM;QACN,IAAID,KAAK,GAAG,CAAC,EAAE;UACdI,QAAQ,GAAG,MAAM;UACjBC,SAAS,GAAGL,KAAK;QAClB,CAAC,MAAM;UACN,IAAID,OAAO,GAAG,CAAC,EAAE;YAChBK,QAAQ,GAAG,QAAQ;YACnBC,SAAS,GAAGN,OAAO;UACpB,CAAC,MAAM;YACNK,QAAQ,GAAG,QAAQ;YACnBC,SAAS,GAAGT,OAAO,KAAK,CAAC,GAAIA,OAAO,GAAG,CAAC,GAAIA,OAAO;UACpD;QACD;MACD;IACD;EACD;EACA,OAAOF,OAAO,CAACU,QAAQ,CAAC,CAACE,OAAO,CAAC,KAAK,EAAED,SAAS,CAAC;AACnD;AAEA,eAAed,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}