{"ast":null,"code":"import { seat_status_use, seat_status_free } from '@/config';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'SeatList',\n  data() {\n    return {\n      seat_status: [{\n        label: '全部',\n        value: '0'\n      }, {\n        label: seat_status_use,\n        value: '1'\n      }, {\n        label: seat_status_free,\n        value: '2'\n      }],\n      // 搜索座位列表的表单\n      searchForm: {\n        seat_no: '',\n        seat_status: ''\n      },\n      // 添加座位信息的表单\n      seatAddDialog: false,\n      // 修改用户信息的表单\n      seatUpdateDialog: false,\n      // 当前页\n      page_no: 1,\n      // 初始化每页条目数\n      page_size: 8,\n      // 个数选择器\n      page_sizes: [8, 16, 30, 50, 100]\n    };\n  },\n  computed: {\n    ...mapGetters(['seatlist', 'seat_count'])\n  },\n  mounted() {\n    this.searchForm.seat_status = this.seat_status[0].value;\n    // 获取座位列表\n    this.getSeatList();\n  },\n  methods: {\n    // 重置表单\n    resetForm(formname) {\n      this.$refs[formname].resetFields();\n    },\n    // 重置搜索表单\n    resetSearchForm(formname) {\n      this.resetForm(formname);\n      this.searchForm.seat_status = this.seat_status[0].value;\n    },\n    // 添加座位\n    async addSeat() {\n      await this.$prompt('请输入座位编号', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputPattern: /^[1-5]-[1-9][0-9][1-9]$/,\n        // \n        inputErrorMessage: '座位编号格式: 楼层-号码'\n      }).then(async ({\n        value\n      }) => {\n        try {\n          const seat_no = value;\n          await this.$store.dispatch('addSeat', JSON.stringify({\n            seat_no\n          })).then(res => {\n            this.$message({\n              type: 'success',\n              message: res\n            });\n            this.getSeatList();\n          }).catch(err => {\n            this.$message({\n              type: 'warning',\n              message: err.message\n            });\n          });\n        } catch (e) {\n          this.$message({\n            type: 'info',\n            message: e.message\n          });\n        }\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '取消输入'\n        });\n      });\n    },\n    // 修改座位信息\n    async updateSeat(index, rows) {\n      const seat_id = rows[index].seat_id;\n      await this.$prompt('请输入座位编号', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputPattern: /^[1-5]-[1-9][0-9][1-9]$/,\n        inputErrorMessage: '座位编号格式: 楼层-号码'\n      }).then(async ({\n        value\n      }) => {\n        try {\n          const seat_no = value;\n          await this.$store.dispatch('backUpdateSeatInfo', JSON.stringify({\n            seat_id,\n            seat_no\n          })).then(res => {\n            this.$message({\n              type: 'success',\n              message: res\n            });\n            this.getSeatList();\n          }).catch(err => {\n            this.$message({\n              type: 'warning',\n              message: err.message\n            });\n          });\n        } catch (e) {\n          this.$message({\n            type: 'warning',\n            message: e.message\n          });\n        }\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '取消输入'\n        });\n      });\n    },\n    // 移除座位\n    async delSeat(index, rows) {\n      const seat_no = rows[index].seat_no;\n      const seat_id = rows[index].seat_id;\n      await this.$confirm(`是否移除座位 [${seat_no}] ?`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          await this.$store.dispatch('delSeat', {\n            seat_id\n          }).then(res => {\n            this.$message({\n              type: 'success',\n              message: res\n            });\n            // 重新获取座位列表\n            this.getSeatList();\n          }).catch(err => this.$message({\n            type: 'warning',\n            message: err.message\n          }));\n        } catch (e) {\n          this.$message({\n            type: 'warning',\n            message: e.message\n          });\n        }\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消'\n        });\n      });\n    },\n    // 每页多少条目\n    handleSizeChange(val) {\n      this.page_size = val;\n      this.page_no = 1;\n      this.getSeatList();\n    },\n    // 当前第几页\n    handleCurrentChange(val) {\n      this.page_no = val;\n      this.getSeatList();\n    },\n    // 获取座位列表\n    async getSeatList() {\n      try {\n        const {\n          page_no,\n          page_size\n        } = this;\n        let seat_no = this.searchForm.seat_no;\n        const reg = /^[0-9-]{1,5}$/;\n        if (!reg.test(seat_no)) {\n          if (seat_no !== '') {\n            seat_no = '1111111111111111111111111111111111111';\n          }\n        }\n        let seat_status = Number.parseInt(this.searchForm.seat_status) || 0;\n        if (seat_status === 0) seat_status = '全部';else if (seat_status === 1) seat_status = seat_status_use;else if (seat_status === 2) seat_status = seat_status_free;\n        await this.$store.dispatch('getSeatList', JSON.stringify({\n          page_no,\n          page_size,\n          seat_no,\n          seat_status\n        }));\n      } catch (e) {\n        this.$message({\n          type: 'warning',\n          message: e.message\n        });\n      }\n    },\n    // 搜索\n    search() {\n      this.page_no = 1;\n      this.page_size = this.page_sizes[0];\n      this.getSeatList();\n    }\n  }\n};","map":{"version":3,"names":["seat_status_use","seat_status_free","mapGetters","name","data","seat_status","label","value","searchForm","seat_no","seatAddDialog","seatUpdateDialog","page_no","page_size","page_sizes","computed","mounted","getSeatList","methods","resetForm","formname","$refs","resetFields","resetSearchForm","addSeat","$prompt","confirmButtonText","cancelButtonText","inputPattern","inputErrorMessage","then","$store","dispatch","JSON","stringify","res","$message","type","message","catch","err","e","updateSeat","index","rows","seat_id","delSeat","$confirm","handleSizeChange","val","handleCurrentChange","reg","test","Number","parseInt","search"],"sources":["src/views/Index/Back/SeatList/index.vue"],"sourcesContent":["<template>\r\n    <div class=\"seatlist maxWH clearfix\">\r\n        <!-- 搜索 -->\r\n        <div class=\"search\">\r\n            <el-form ref=\"searchSeatForm\" class=\"flex maxWH search-form\" :model=\"searchForm\" label-width=\"80px\">\r\n                <el-form-item label=\"座位编号\" prop=\"seat_no\">\r\n                    <el-input v-model.trim=\"searchForm.seat_no\" placeholder=\"请输入想查询的座位编号\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"座位状态\" prop=\"seat_status\">\r\n                    <el-select v-model=\"searchForm.seat_status\" placeholder=\"请选择座位状态\">\r\n                        <el-option v-for=\"ss in seat_status\" :key=\"ss.value\" :label=\"ss.label\" :value=\"ss.value\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item class=\"flex\" style=\"overflow: hidden;\">\r\n                    <el-button type=\"primary\" @click.native.prevent.stop=\"search\">搜索</el-button>\r\n                    <el-button @click.native.prevent.stop=\"resetSearchForm('searchSeatForm')\">重置</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n        <!-- 添加 -->\r\n        <el-button type=\"primary\" @click.native.prevent.stop=\"addSeat\" style=\"margin: 15px 0;\">添加座位</el-button>\r\n        <!-- 列表显示座位 -->\r\n        <el-table :data=\"seatlist\" border style=\"width: 100%\" max-height=\"250\">\r\n            <el-table-column prop=\"seat_no\" label=\"座位编号\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"seat_status\" label=\"座位状态\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"use_count\" label=\"使用次数\">\r\n            </el-table-column>\r\n            <el-table-column prop=\"create_time\" label=\"创建时间\" show-overflow-tooltip>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" header-align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                    <div class=\"handler flex-center\">\r\n                        <el-button type=\"warning\" @click.native.prevent.stop=\"updateSeat(scope.$index, seatlist)\">\r\n                            修改\r\n                        </el-button>\r\n                        <el-button @click.native.prevent=\"delSeat(scope.$index, seatlist)\" type=\"danger\">\r\n                            移除\r\n                        </el-button>\r\n                    </div>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <!-- 分页器 -->\r\n        <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"page_no\"\r\n            :page-sizes=\"page_sizes\" :page-size=\"page_size\" layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"seat_count\" style=\"padding: 10px 0;\">\r\n        </el-pagination>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { seat_status_use, seat_status_free } from '@/config'\r\nimport { mapGetters } from 'vuex'\r\nexport default {\r\n    name: 'SeatList',\r\n    data() {\r\n        return {\r\n            seat_status: [\r\n                { label: '全部', value: '0' },\r\n                { label: seat_status_use, value: '1' },\r\n                { label: seat_status_free, value: '2' },\r\n            ],\r\n            // 搜索座位列表的表单\r\n            searchForm: {\r\n                seat_no: '',\r\n                seat_status: '',\r\n            },\r\n            // 添加座位信息的表单\r\n            seatAddDialog: false,\r\n            // 修改用户信息的表单\r\n            seatUpdateDialog: false,\r\n            // 当前页\r\n            page_no: 1,\r\n            // 初始化每页条目数\r\n            page_size: 8,\r\n            // 个数选择器\r\n            page_sizes: [8, 16, 30, 50, 100],\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapGetters(['seatlist', 'seat_count'])\r\n    },\r\n    mounted() {\r\n        this.searchForm.seat_status = this.seat_status[0].value\r\n        // 获取座位列表\r\n        this.getSeatList()\r\n    },\r\n    methods: {\r\n        // 重置表单\r\n        resetForm(formname) {\r\n            this.$refs[formname].resetFields()\r\n        },\r\n        // 重置搜索表单\r\n        resetSearchForm(formname) {\r\n            this.resetForm(formname)\r\n            this.searchForm.seat_status = this.seat_status[0].value\r\n        },\r\n        // 添加座位\r\n        async addSeat() {\r\n            await this.$prompt('请输入座位编号', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                inputPattern: /^[1-5]-[1-9][0-9][1-9]$/,\r\n                // \r\n                inputErrorMessage: '座位编号格式: 楼层-号码'\r\n            }).then(async ({ value }) => {\r\n                try {\r\n                    const seat_no = value\r\n                    await this.$store.dispatch('addSeat', JSON.stringify({ seat_no }))\r\n                        .then(res => {\r\n                            this.$message({ type: 'success', message: res })\r\n                            this.getSeatList()\r\n                        }).catch(err => { this.$message({ type: 'warning', message: err.message }) })\r\n                } catch (e) {\r\n                    this.$message({ type: 'info', message: e.message })\r\n                }\r\n            }).catch(() => { this.$message({ type: 'info', message: '取消输入' }) })\r\n        },\r\n        // 修改座位信息\r\n        async updateSeat(index, rows) {\r\n            const seat_id = rows[index].seat_id\r\n            await this.$prompt('请输入座位编号', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                inputPattern: /^[1-5]-[1-9][0-9][1-9]$/,\r\n                inputErrorMessage: '座位编号格式: 楼层-号码'\r\n            }).then(async ({ value }) => {\r\n                try {\r\n                    const seat_no = value\r\n                    await this.$store.dispatch('backUpdateSeatInfo', JSON.stringify({ seat_id, seat_no }))\r\n                        .then(res => {\r\n                            this.$message({ type: 'success', message: res })\r\n                            this.getSeatList()\r\n                        }).catch(err => { this.$message({ type: 'warning', message: err.message }) })\r\n                } catch (e) {\r\n                    this.$message({ type: 'warning', message: e.message })\r\n                }\r\n            }).catch(() => { this.$message({ type: 'info', message: '取消输入' }) })\r\n        },\r\n        // 移除座位\r\n        async delSeat(index, rows) {\r\n            const seat_no = rows[index].seat_no\r\n            const seat_id = rows[index].seat_id\r\n            await this.$confirm(`是否移除座位 [${seat_no}] ?`, '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).then(async () => {\r\n                try {\r\n                    await this.$store.dispatch('delSeat', { seat_id })\r\n                        .then(res => {\r\n                            this.$message({ type: 'success', message: res })\r\n                            // 重新获取座位列表\r\n                            this.getSeatList()\r\n                        }).catch(err => this.$message({ type: 'warning', message: err.message }))\r\n                } catch (e) {\r\n                    this.$message({ type: 'warning', message: e.message })\r\n                }\r\n            }).catch(() => {\r\n                this.$message({ type: 'info', message: '已取消' })\r\n            })\r\n        },\r\n        // 每页多少条目\r\n        handleSizeChange(val) {\r\n            this.page_size = val\r\n            this.page_no = 1\r\n            this.getSeatList()\r\n        },\r\n        // 当前第几页\r\n        handleCurrentChange(val) {\r\n            this.page_no = val\r\n            this.getSeatList()\r\n        },\r\n        // 获取座位列表\r\n        async getSeatList() {\r\n            try {\r\n                const { page_no, page_size } = this\r\n                let seat_no = this.searchForm.seat_no\r\n                const reg = /^[0-9-]{1,5}$/\r\n                if (!reg.test(seat_no)) {\r\n                    if (seat_no !== '') {\r\n                        seat_no = '1111111111111111111111111111111111111'\r\n                    }\r\n                }\r\n                let seat_status = Number.parseInt(this.searchForm.seat_status) || 0\r\n                if (seat_status === 0) seat_status = '全部'\r\n                else if (seat_status === 1) seat_status = seat_status_use\r\n                else if (seat_status === 2) seat_status = seat_status_free\r\n                await this.$store.dispatch('getSeatList', JSON.stringify({ page_no, page_size, seat_no, seat_status }))\r\n            } catch (e) {\r\n                this.$message({ type: 'warning', message: e.message })\r\n            }\r\n        },\r\n        // 搜索\r\n        search() {\r\n            this.page_no = 1\r\n            this.page_size = this.page_sizes[0]\r\n            this.getSeatList()\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.seatlist {\r\n    .search {\r\n        width: 100%;\r\n        height: 80px;\r\n        box-sizing: border-box;\r\n        border: 1px solid rgb(220, 220, 220);\r\n        padding-top: 15px;\r\n        overflow: hidden;\r\n\r\n        .search-form {\r\n            min-width: 400px;\r\n            justify-content: center;\r\n        }\r\n    }\r\n}\r\n</style>"],"mappings":"AAsDA,SAAAA,eAAA,EAAAC,gBAAA;AACA,SAAAC,UAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA,GACA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA,EAAAN,eAAA;QAAAO,KAAA;MAAA,GACA;QAAAD,KAAA,EAAAL,gBAAA;QAAAM,KAAA;MAAA,EACA;MACA;MACAC,UAAA;QACAC,OAAA;QACAJ,WAAA;MACA;MACA;MACAK,aAAA;MACA;MACAC,gBAAA;MACA;MACAC,OAAA;MACA;MACAC,SAAA;MACA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAb,UAAA;EACA;EACAc,QAAA;IACA,KAAAR,UAAA,CAAAH,WAAA,QAAAA,WAAA,IAAAE,KAAA;IACA;IACA,KAAAU,WAAA;EACA;EACAC,OAAA;IACA;IACAC,UAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,WAAA;IACA;IACA;IACAC,gBAAAH,QAAA;MACA,KAAAD,SAAA,CAAAC,QAAA;MACA,KAAAZ,UAAA,CAAAH,WAAA,QAAAA,WAAA,IAAAE,KAAA;IACA;IACA;IACA,MAAAiB,QAAA;MACA,WAAAC,OAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,YAAA;QACA;QACAC,iBAAA;MACA,GAAAC,IAAA;QAAAvB;MAAA;QACA;UACA,MAAAE,OAAA,GAAAF,KAAA;UACA,WAAAwB,MAAA,CAAAC,QAAA,YAAAC,IAAA,CAAAC,SAAA;YAAAzB;UAAA,IACAqB,IAAA,CAAAK,GAAA;YACA,KAAAC,QAAA;cAAAC,IAAA;cAAAC,OAAA,EAAAH;YAAA;YACA,KAAAlB,WAAA;UACA,GAAAsB,KAAA,CAAAC,GAAA;YAAA,KAAAJ,QAAA;cAAAC,IAAA;cAAAC,OAAA,EAAAE,GAAA,CAAAF;YAAA;UAAA;QACA,SAAAG,CAAA;UACA,KAAAL,QAAA;YAAAC,IAAA;YAAAC,OAAA,EAAAG,CAAA,CAAAH;UAAA;QACA;MACA,GAAAC,KAAA;QAAA,KAAAH,QAAA;UAAAC,IAAA;UAAAC,OAAA;QAAA;MAAA;IACA;IACA;IACA,MAAAI,WAAAC,KAAA,EAAAC,IAAA;MACA,MAAAC,OAAA,GAAAD,IAAA,CAAAD,KAAA,EAAAE,OAAA;MACA,WAAApB,OAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,YAAA;QACAC,iBAAA;MACA,GAAAC,IAAA;QAAAvB;MAAA;QACA;UACA,MAAAE,OAAA,GAAAF,KAAA;UACA,WAAAwB,MAAA,CAAAC,QAAA,uBAAAC,IAAA,CAAAC,SAAA;YAAAW,OAAA;YAAApC;UAAA,IACAqB,IAAA,CAAAK,GAAA;YACA,KAAAC,QAAA;cAAAC,IAAA;cAAAC,OAAA,EAAAH;YAAA;YACA,KAAAlB,WAAA;UACA,GAAAsB,KAAA,CAAAC,GAAA;YAAA,KAAAJ,QAAA;cAAAC,IAAA;cAAAC,OAAA,EAAAE,GAAA,CAAAF;YAAA;UAAA;QACA,SAAAG,CAAA;UACA,KAAAL,QAAA;YAAAC,IAAA;YAAAC,OAAA,EAAAG,CAAA,CAAAH;UAAA;QACA;MACA,GAAAC,KAAA;QAAA,KAAAH,QAAA;UAAAC,IAAA;UAAAC,OAAA;QAAA;MAAA;IACA;IACA;IACA,MAAAQ,QAAAH,KAAA,EAAAC,IAAA;MACA,MAAAnC,OAAA,GAAAmC,IAAA,CAAAD,KAAA,EAAAlC,OAAA;MACA,MAAAoC,OAAA,GAAAD,IAAA,CAAAD,KAAA,EAAAE,OAAA;MACA,WAAAE,QAAA,YAAAtC,OAAA;QACAiB,iBAAA;QACAC,gBAAA;QACAU,IAAA;MACA,GAAAP,IAAA;QACA;UACA,WAAAC,MAAA,CAAAC,QAAA;YAAAa;UAAA,GACAf,IAAA,CAAAK,GAAA;YACA,KAAAC,QAAA;cAAAC,IAAA;cAAAC,OAAA,EAAAH;YAAA;YACA;YACA,KAAAlB,WAAA;UACA,GAAAsB,KAAA,CAAAC,GAAA,SAAAJ,QAAA;YAAAC,IAAA;YAAAC,OAAA,EAAAE,GAAA,CAAAF;UAAA;QACA,SAAAG,CAAA;UACA,KAAAL,QAAA;YAAAC,IAAA;YAAAC,OAAA,EAAAG,CAAA,CAAAH;UAAA;QACA;MACA,GAAAC,KAAA;QACA,KAAAH,QAAA;UAAAC,IAAA;UAAAC,OAAA;QAAA;MACA;IACA;IACA;IACAU,iBAAAC,GAAA;MACA,KAAApC,SAAA,GAAAoC,GAAA;MACA,KAAArC,OAAA;MACA,KAAAK,WAAA;IACA;IACA;IACAiC,oBAAAD,GAAA;MACA,KAAArC,OAAA,GAAAqC,GAAA;MACA,KAAAhC,WAAA;IACA;IACA;IACA,MAAAA,YAAA;MACA;QACA;UAAAL,OAAA;UAAAC;QAAA;QACA,IAAAJ,OAAA,QAAAD,UAAA,CAAAC,OAAA;QACA,MAAA0C,GAAA;QACA,KAAAA,GAAA,CAAAC,IAAA,CAAA3C,OAAA;UACA,IAAAA,OAAA;YACAA,OAAA;UACA;QACA;QACA,IAAAJ,WAAA,GAAAgD,MAAA,CAAAC,QAAA,MAAA9C,UAAA,CAAAH,WAAA;QACA,IAAAA,WAAA,QAAAA,WAAA,aACA,IAAAA,WAAA,QAAAA,WAAA,GAAAL,eAAA,MACA,IAAAK,WAAA,QAAAA,WAAA,GAAAJ,gBAAA;QACA,WAAA8B,MAAA,CAAAC,QAAA,gBAAAC,IAAA,CAAAC,SAAA;UAAAtB,OAAA;UAAAC,SAAA;UAAAJ,OAAA;UAAAJ;QAAA;MACA,SAAAoC,CAAA;QACA,KAAAL,QAAA;UAAAC,IAAA;UAAAC,OAAA,EAAAG,CAAA,CAAAH;QAAA;MACA;IACA;IACA;IACAiB,OAAA;MACA,KAAA3C,OAAA;MACA,KAAAC,SAAA,QAAAC,UAAA;MACA,KAAAG,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}