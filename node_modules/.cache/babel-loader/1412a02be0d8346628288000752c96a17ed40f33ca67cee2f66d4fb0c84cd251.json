{"ast":null,"code":"import * as echarts from 'echarts';\nimport { mapGetters } from 'vuex';\nexport default {\n  created() {\n    this.option = {\n      xAxis: {\n        type: 'value'\n      },\n      yAxis: {\n        type: 'category',\n        data: ['learning_rate', 'n_episode', 'n_time_step', 'seed', 'Q_value', 'other']\n      },\n      series: [{\n        // data: [120,110,23,45,67,68],\n        data: [],\n        type: 'bar',\n        showBackground: true,\n        backgroundStyle: {\n          color: 'rgba(180, 180, 180, 0.2)'\n        }\n      }]\n    };\n  },\n  name: 'LineChart',\n  props: ['echarts_info'],\n  computed: {\n    ...mapGetters(['echarts_list'])\n  },\n  mounted() {\n    this.getEchartsList();\n    this.initEcharts();\n    this.btnRefresh();\n    this.$nextTick(() => {\n      this.btnRefresh();\n    });\n  },\n  methods: {\n    // 获取用户信息\n    async getEchartsList(user_id) {\n      try {\n        await this.$store.dispatch('getEchartsList', 1);\n      } catch (e) {\n        console.warn(e.message);\n      }\n    },\n    async initEcharts() {\n      // 初始化echarts实例\n      let lineCharts = echarts.init(this.$refs.lineCharts);\n      // 配置数据\n      lineCharts.setOption(this.option);\n      if (this.echarts_list && this.echarts_list.shap) {\n        console.log('111');\n        this.option.series[0].data = this.echarts_list.shap;\n      }\n      console.log(this.option);\n      // 配置数据\n      lineCharts.setOption(this.option);\n    },\n    async btnRefresh() {\n      if (this.echarts_list && this.echarts_list.shap) {\n        this.option.series[0].data = this.echarts_list.shap;\n        console.log(this.option.series);\n      }\n    }\n  }\n};","map":{"version":3,"names":["echarts","mapGetters","created","option","xAxis","type","yAxis","data","series","showBackground","backgroundStyle","color","name","props","computed","mounted","getEchartsList","initEcharts","btnRefresh","$nextTick","methods","user_id","$store","dispatch","e","console","warn","message","lineCharts","init","$refs","setOption","echarts_list","shap","log"],"sources":["src/views/Index/Home/ShadowChart/index.vue"],"sourcesContent":["<template>\r\n  <!-- shap图 -->\r\n\r\n   <div class=\"LineChart maxWH\" ref=\"lineCharts\">\r\n   \r\n   </div>   \r\n    <!-- <div>{{echarts_list.shap}}</div> -->\r\n   \r\n</template>\r\n\r\n<script>\r\n\r\nimport * as echarts from 'echarts'\r\n\r\nimport { mapGetters } from 'vuex'\r\nexport default {\r\n \r\n  created(){\r\n    this.option={\r\n      xAxis: {\r\n          type: 'value',\r\n  },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: ['learning_rate', 'n_episode', 'n_time_step', 'seed', 'Q_value', 'other']\r\n  },\r\n        series: [\r\n         {\r\n          // data: [120,110,23,45,67,68],\r\n          data:[],\r\n          type: 'bar',\r\n          showBackground: true,\r\n          backgroundStyle: {\r\n          color: 'rgba(180, 180, 180, 0.2)' }\r\n         }\r\n  ]\r\n      \r\n    }\r\n  },\r\n  name: 'LineChart',\r\n  props: ['echarts_info'],\r\n  computed: {\r\n        ...mapGetters(['echarts_list']),\r\n        \r\n        \r\n    },\r\n  mounted() {\r\n    this.getEchartsList();\r\n    \r\n    this.initEcharts();\r\n\r\n    this.btnRefresh();\r\n    this.$nextTick(() => {\r\n    this.btnRefresh();\r\n  });\r\n   \r\n\r\n  },\r\n  \r\n  methods: {\r\n        // 获取用户信息\r\n        async getEchartsList(user_id) {\r\n            try {\r\n                await this.$store.dispatch('getEchartsList', 1)\r\n            } catch (e) {\r\n                console.warn(e.message)\r\n            }\r\n        },\r\n\r\n         async initEcharts(){\r\n             // 初始化echarts实例\r\n          let lineCharts = echarts.init(this.$refs.lineCharts)\r\n            // 配置数据\r\n          lineCharts.setOption(this.option)\r\n         \r\n          if (this.echarts_list && this.echarts_list.shap) {\r\n            console.log('111')\r\n            this.option.series[0].data = this.echarts_list.shap;}\r\n          console.log(this.option)\r\n          // 配置数据\r\n          lineCharts.setOption(this.option)\r\n\r\n         \r\n         },\r\n\r\n\r\n         async btnRefresh(){\r\n          if (this.echarts_list && this.echarts_list.shap) {\r\n            this.option.series[0].data = this.echarts_list.shap;\r\n            \r\n            console.log(this.option.series)\r\n          }\r\n    \r\n\r\n         }\r\n\r\n      }\r\n\r\n  \r\n  \r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n// img{\r\n// width:562; \r\n// height:274px;\r\n// position: relative;\r\n\r\n// }\r\n.parent {\r\nwidth: 562px;\r\nheight: 600px;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n}\r\n\r\nimg {\r\nmax-width: 100%;\r\nmax-height: 100%;\r\n}\r\n\r\n</style>\r\n"],"mappings":"AAYA,YAAAA,OAAA;AAEA,SAAAC,UAAA;AACA;EAEAC,QAAA;IACA,KAAAC,MAAA;MACAC,KAAA;QACAC,IAAA;MACA;MACAC,KAAA;QACAD,IAAA;QACAE,IAAA;MACA;MACAC,MAAA,GACA;QACA;QACAD,IAAA;QACAF,IAAA;QACAI,cAAA;QACAC,eAAA;UACAC,KAAA;QAAA;MACA;IAGA;EACA;EACAC,IAAA;EACAC,KAAA;EACAC,QAAA;IACA,GAAAb,UAAA;EAGA;EACAc,QAAA;IACA,KAAAC,cAAA;IAEA,KAAAC,WAAA;IAEA,KAAAC,UAAA;IACA,KAAAC,SAAA;MACA,KAAAD,UAAA;IACA;EAGA;EAEAE,OAAA;IACA;IACA,MAAAJ,eAAAK,OAAA;MACA;QACA,WAAAC,MAAA,CAAAC,QAAA;MACA,SAAAC,CAAA;QACAC,OAAA,CAAAC,IAAA,CAAAF,CAAA,CAAAG,OAAA;MACA;IACA;IAEA,MAAAV,YAAA;MACA;MACA,IAAAW,UAAA,GAAA5B,OAAA,CAAA6B,IAAA,MAAAC,KAAA,CAAAF,UAAA;MACA;MACAA,UAAA,CAAAG,SAAA,MAAA5B,MAAA;MAEA,SAAA6B,YAAA,SAAAA,YAAA,CAAAC,IAAA;QACAR,OAAA,CAAAS,GAAA;QACA,KAAA/B,MAAA,CAAAK,MAAA,IAAAD,IAAA,QAAAyB,YAAA,CAAAC,IAAA;MAAA;MACAR,OAAA,CAAAS,GAAA,MAAA/B,MAAA;MACA;MACAyB,UAAA,CAAAG,SAAA,MAAA5B,MAAA;IAGA;IAGA,MAAAe,WAAA;MACA,SAAAc,YAAA,SAAAA,YAAA,CAAAC,IAAA;QACA,KAAA9B,MAAA,CAAAK,MAAA,IAAAD,IAAA,QAAAyB,YAAA,CAAAC,IAAA;QAEAR,OAAA,CAAAS,GAAA,MAAA/B,MAAA,CAAAK,MAAA;MACA;IAGA;EAEA;AAKA"},"metadata":{},"sourceType":"module","externalDependencies":[]}