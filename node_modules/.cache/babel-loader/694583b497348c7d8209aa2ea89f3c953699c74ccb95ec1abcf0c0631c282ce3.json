{"ast":null,"code":"import { reqFrontGetNoticeList, reqFrontSetRead, reqFrontAllSetRead } from '@/api';\nconst state = {\n  front_notice_list: [] // 通知列表\n};\n\nconst mutations = {\n  // 获取通知列表\n  FRONTGETNOTICELIST(state, result) {\n    state.front_notice_list = result.data;\n  }\n};\nconst actions = {\n  // 获取通知列表\n  async frontGetNoticeList({\n    commit\n  }, user = {}) {\n    let result = await reqFrontGetNoticeList(user);\n    result = result.data;\n    // console.log(result)\n    if (result.status === 0) {\n      commit('FRONTGETNOTICELIST', result);\n      return result.msg || 'ok';\n    } else {\n      return Promise.reject(new Error(result.msg || 'fail'));\n    }\n  },\n  // 设置通知状态为已读\n  async frontSetRead({\n    commit\n  }, info = {}) {\n    //eslint-disable-line no-unused-vars\n    let result = await reqFrontSetRead(info);\n    result = result.data;\n    // console.log(result)\n    if (result.status === 0) {\n      return result.msg || 'ok';\n    } else {\n      return Promise.reject(new Error(result.msg || 'fail'));\n    }\n  },\n  // 设置该用户的所有通知为已读\n  async frontAllSetRead({\n    commit\n  }, user = {}) {\n    //eslint-disable-line no-unused-vars\n    let result = await reqFrontAllSetRead(user);\n    result = result.data;\n    // console.log(result)\n    if (result.status === 0) {\n      return result.msg || 'ok';\n    } else {\n      return Promise.reject(new Error(result.msg || 'fail'));\n    }\n  }\n};\nconst getters = {\n  front_notice_list(state) {\n    return state.front_notice_list || [];\n  }\n};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["reqFrontGetNoticeList","reqFrontSetRead","reqFrontAllSetRead","state","front_notice_list","mutations","FRONTGETNOTICELIST","result","data","actions","frontGetNoticeList","commit","user","status","msg","Promise","reject","Error","frontSetRead","info","frontAllSetRead","getters"],"sources":["/Users/jiangke/PycharmProjects/RL-app/src/store/front/notice.js"],"sourcesContent":["import { reqFrontGetNoticeList, reqFrontSetRead, reqFrontAllSetRead } from '@/api'\r\n\r\n\r\n\r\nconst state = {\r\n    front_notice_list: [], // 通知列表\r\n}\r\n\r\nconst mutations = {\r\n    // 获取通知列表\r\n    FRONTGETNOTICELIST(state, result) {\r\n        state.front_notice_list = result.data\r\n    },\r\n}\r\n\r\nconst actions = {\r\n    // 获取通知列表\r\n    async frontGetNoticeList({ commit }, user = {}) {\r\n        let result = await reqFrontGetNoticeList(user)\r\n        result = result.data\r\n        // console.log(result)\r\n        if (result.status === 0) {\r\n            commit('FRONTGETNOTICELIST', result)\r\n            return result.msg || 'ok'\r\n        } else {\r\n            return Promise.reject(new Error(result.msg || 'fail'))\r\n        }\r\n    },\r\n    // 设置通知状态为已读\r\n    async frontSetRead({ commit }, info = {}) {//eslint-disable-line no-unused-vars\r\n        let result = await reqFrontSetRead(info)\r\n        result = result.data\r\n        // console.log(result)\r\n        if (result.status === 0) {\r\n            return result.msg || 'ok'\r\n        } else {\r\n            return Promise.reject(new Error(result.msg || 'fail'))\r\n        }\r\n    },\r\n    // 设置该用户的所有通知为已读\r\n    async frontAllSetRead({ commit }, user = {}) {//eslint-disable-line no-unused-vars\r\n        let result = await reqFrontAllSetRead(user)\r\n        result = result.data\r\n        // console.log(result)\r\n        if (result.status === 0) {\r\n            return result.msg || 'ok'\r\n        } else {\r\n            return Promise.reject(new Error(result.msg || 'fail'))\r\n        }\r\n    },\r\n}\r\n\r\nconst getters = {\r\n    front_notice_list(state) {\r\n        return state.front_notice_list || []\r\n    },\r\n}\r\n\r\nexport default {\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n}"],"mappings":"AAAA,SAASA,qBAAqB,EAAEC,eAAe,EAAEC,kBAAkB,QAAQ,OAAO;AAIlF,MAAMC,KAAK,GAAG;EACVC,iBAAiB,EAAE,EAAE,CAAE;AAC3B,CAAC;;AAED,MAAMC,SAAS,GAAG;EACd;EACAC,kBAAkBA,CAACH,KAAK,EAAEI,MAAM,EAAE;IAC9BJ,KAAK,CAACC,iBAAiB,GAAGG,MAAM,CAACC,IAAI;EACzC;AACJ,CAAC;AAED,MAAMC,OAAO,GAAG;EACZ;EACA,MAAMC,kBAAkBA,CAAC;IAAEC;EAAO,CAAC,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;IAC5C,IAAIL,MAAM,GAAG,MAAMP,qBAAqB,CAACY,IAAI,CAAC;IAC9CL,MAAM,GAAGA,MAAM,CAACC,IAAI;IACpB;IACA,IAAID,MAAM,CAACM,MAAM,KAAK,CAAC,EAAE;MACrBF,MAAM,CAAC,oBAAoB,EAAEJ,MAAM,CAAC;MACpC,OAAOA,MAAM,CAACO,GAAG,IAAI,IAAI;IAC7B,CAAC,MAAM;MACH,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAACV,MAAM,CAACO,GAAG,IAAI,MAAM,CAAC,CAAC;IAC1D;EACJ,CAAC;EACD;EACA,MAAMI,YAAYA,CAAC;IAAEP;EAAO,CAAC,EAAEQ,IAAI,GAAG,CAAC,CAAC,EAAE;IAAC;IACvC,IAAIZ,MAAM,GAAG,MAAMN,eAAe,CAACkB,IAAI,CAAC;IACxCZ,MAAM,GAAGA,MAAM,CAACC,IAAI;IACpB;IACA,IAAID,MAAM,CAACM,MAAM,KAAK,CAAC,EAAE;MACrB,OAAON,MAAM,CAACO,GAAG,IAAI,IAAI;IAC7B,CAAC,MAAM;MACH,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAACV,MAAM,CAACO,GAAG,IAAI,MAAM,CAAC,CAAC;IAC1D;EACJ,CAAC;EACD;EACA,MAAMM,eAAeA,CAAC;IAAET;EAAO,CAAC,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;IAAC;IAC1C,IAAIL,MAAM,GAAG,MAAML,kBAAkB,CAACU,IAAI,CAAC;IAC3CL,MAAM,GAAGA,MAAM,CAACC,IAAI;IACpB;IACA,IAAID,MAAM,CAACM,MAAM,KAAK,CAAC,EAAE;MACrB,OAAON,MAAM,CAACO,GAAG,IAAI,IAAI;IAC7B,CAAC,MAAM;MACH,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAACV,MAAM,CAACO,GAAG,IAAI,MAAM,CAAC,CAAC;IAC1D;EACJ;AACJ,CAAC;AAED,MAAMO,OAAO,GAAG;EACZjB,iBAAiBA,CAACD,KAAK,EAAE;IACrB,OAAOA,KAAK,CAACC,iBAAiB,IAAI,EAAE;EACxC;AACJ,CAAC;AAED,eAAe;EACXD,KAAK;EACLE,SAAS;EACTI,OAAO;EACPY;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}