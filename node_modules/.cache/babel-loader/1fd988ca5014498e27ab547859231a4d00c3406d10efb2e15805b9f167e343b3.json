{"ast":null,"code":"import { reqAddTest, reqGetUserList, reqGetTestList, reqUpdateTestInfo, reqDelUser, reqFrontUpdateTestInfo, reqGetTestDetail } from '@/api';\n\n//state对象，存储组件的状态\nconst state = {\n  testdetail: [],\n  // 实验列表\n  detail_count: 3 // 实验数量\n};\n//唯一可以修改组件状态state值的方法，同步阻塞\nconst mutations = {\n  // 获取用户列表 state为设置的state对象，result为传进来进行更新的数据\n  GETDETAILLIST(state, result) {\n    state.testdetail = result.data;\n    state.detail_count = result.detail_count;\n  }\n};\nconst actions = {\n  // 添加实验\n  async addTest({\n    commit\n  }, test) {\n    //eslint-disable-line no-unused-vars\n\n    let result = await reqAddTest(test);\n    result = result.data;\n    // console.log(result)\n    if (result.status === 0) {\n      return result.msg || 'ok';\n    } else {\n      return Promise.reject(new Error(result.msg || 'fail'));\n    }\n  },\n  // 获取实验列表\n  async getDetailList({\n    commit\n  }, info) {\n    let result = await reqGetTestDetail(info);\n    // let result = await reqGetUserList(info)\n    result = result.data;\n    if (result.status === 0) {\n      commit('GETDETAILLIST', result);\n      return result.msg || 'ok';\n    } else {\n      return Promise.reject(new Error(result.msg || 'fail'));\n    }\n  },\n  // 修改实验信息\n  async updateTestInfo({\n    commit\n  }, test) {\n    let result = await reqUpdateTestInfo(test);\n    result = result.data;\n    if (result.status === 0) {\n      return result.msg || 'ok';\n    } else {\n      return Promise.reject(new Error(result.msg || 'fail'));\n    }\n  },\n  // 封禁用户\n  async delUser({\n    commit\n  }, user = {}) {\n    //eslint-disable-line no-unused-vars\n    let result = await reqDelUser(user);\n    result = result.data;\n    // console.log(result)\n    if (result.status === 0) {\n      return result.msg || 'ok';\n    } else {\n      return Promise.reject(new Error(result.msg || 'fail'));\n    }\n  }\n};\n//取值的方法 通过该方法获取组件的状态\nconst getters = {\n  testdetail(state) {\n    return state.testdetail || [];\n  },\n  detail_count(state) {\n    return state.detail_count || 0;\n  }\n};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["reqAddTest","reqGetUserList","reqGetTestList","reqUpdateTestInfo","reqDelUser","reqFrontUpdateTestInfo","reqGetTestDetail","state","testdetail","detail_count","mutations","GETDETAILLIST","result","data","actions","addTest","commit","test","status","msg","Promise","reject","Error","getDetailList","info","updateTestInfo","delUser","user","getters"],"sources":["/Users/jiangke/PycharmProjects/RL-app/src/store/front/detail.js"],"sourcesContent":["import { reqAddTest, reqGetUserList,reqGetTestList, reqUpdateTestInfo, reqDelUser, reqFrontUpdateTestInfo,reqGetTestDetail} from '@/api'\r\n\r\n\r\n//state对象，存储组件的状态\r\nconst state = {\r\n    testdetail: [], // 实验列表\r\n    detail_count: 3, // 实验数量\r\n}\r\n//唯一可以修改组件状态state值的方法，同步阻塞\r\nconst mutations = {\r\n    // 获取用户列表 state为设置的state对象，result为传进来进行更新的数据\r\n    GETDETAILLIST(state, result) {\r\n        state.testdetail = result.data\r\n        state.detail_count = result.detail_count\r\n    },\r\n}\r\n\r\nconst actions = {\r\n    // 添加实验\r\n    async addTest({ commit }, test) {//eslint-disable-line no-unused-vars\r\n        \r\n        let result = await reqAddTest(test)\r\n        result = result.data\r\n        // console.log(result)\r\n        if (result.status === 0) {\r\n            return result.msg || 'ok'\r\n        } else {\r\n            return Promise.reject(new Error(result.msg || 'fail'))\r\n        }\r\n    },\r\n    // 获取实验列表\r\n    async getDetailList({ commit }, info) {\r\n        \r\n       let result = await reqGetTestDetail(info)\r\n        // let result = await reqGetUserList(info)\r\n        result = result.data\r\n        \r\n        if (result.status === 0) {\r\n            commit('GETDETAILLIST', result)\r\n            return result.msg || 'ok'\r\n        } else {\r\n            return Promise.reject(new Error(result.msg || 'fail'))\r\n        }\r\n    },\r\n    // 修改实验信息\r\n    async updateTestInfo({ commit }, test) {\r\n       \r\n        let result = await reqUpdateTestInfo(test)\r\n        result = result.data\r\n       \r\n        if (result.status === 0) {\r\n            return result.msg || 'ok'\r\n        } else {\r\n            return Promise.reject(new Error(result.msg || 'fail'))\r\n        }\r\n    },\r\n    // 封禁用户\r\n    async delUser({ commit }, user = {}) {//eslint-disable-line no-unused-vars\r\n        let result = await reqDelUser(user)\r\n        result = result.data\r\n        // console.log(result)\r\n        if (result.status === 0) {\r\n            return result.msg || 'ok'\r\n        } else {\r\n            return Promise.reject(new Error(result.msg || 'fail'))\r\n        }\r\n    },\r\n}\r\n//取值的方法 通过该方法获取组件的状态\r\nconst getters = {\r\n    testdetail(state) {\r\n        return state.testdetail || []\r\n    },\r\n    detail_count(state) {\r\n        return state.detail_count || 0\r\n    },\r\n}\r\n\r\nexport default {\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}